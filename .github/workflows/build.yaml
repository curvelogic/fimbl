name: eucalypt build

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      narrative:
        description: 'Reason for build'
        required: false

env:
  MAJOR_VERSION: 0
  MINOR_VERSION: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo check

  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
          targets:
            - aarch64-apple-darwin
      - run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - run: cargo clippy -- -D warnings

  release-candidate-macos:
    needs: [check, test, fmt, clippy]
    name: Release MacOS
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo test --release
      - run: cargo build --all --release
      - run: |
          strip target/release/fimbl
          mv target/release/fimbl target/release/fimbl_darwin
      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: fimbl-${{ runner.os }}-${{ env.MAJOR_VERSION}}.${{ env.MINOR_VERSION }}.${{ github.run_number }}
          path: target/release/fimbl_darwin


  prepare-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - release-candidate-macos
    steps:

      - uses: actions/download-artifact@v2
        with:
          name: eu_darwin

      - name: Prepare release packages
        run: |
          mkdir eucalypt-x86_64-osx
          cp eu_darwin eucalypt-x86_64-osx/eu
          tar -cvzf eucalypt-x86_64-osx.tgz eucalypt-x86_64-osx

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.MAJOR_VERSION}}.${{ env.MINOR_VERSION }}.${{ github.run_number }}
          draft: true
          prerelease: false
          body_path: CHANGELOG.md
          files: |
            eucalypt-x86_64-osx.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
