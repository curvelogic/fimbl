name: eucalypt build

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      narrative:
        description: 'Reason for build'
        required: false

env:
  MAJOR_VERSION: 0
  MINOR_VERSION: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo check

  test:
    name: Test Suite
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ matrix.target }}-cargo
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
          targets: ${{ matrix.target }}
      - run: cargo test  --target ${{ matrix.target }}

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - run: cargo clippy -- -D warnings

  build-release-candidate:
    name: Build release candidate
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ matrix.target }}-cargo
      - uses: dtolnay/rust-toolchain@master
        with:
          profile: minimal
          toolchain: stable
          override: true
          targets: ${{ matrix.target }}
      - run: cargo build --all --release --target ${{ matrix.target }}
      - run: |
          strip target/${{ matrix.target }}/release/fimbl
          mv target/${{ matrix.target }}/release/fimbl
      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: fimbl-${{ matrix.target }}-${{ env.MAJOR_VERSION}}.${{ env.MINOR_VERSION }}.${{ github.run_number }}
          path: target/${{ matrix.target }}/release/fimbl
